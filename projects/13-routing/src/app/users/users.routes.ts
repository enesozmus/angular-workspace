import { Routes } from '@angular/router';

import { resolveUserTasks, TasksComponent } from '../tasks/tasks.component';
import {
  canLeaveEditPage,
  NewTaskComponent,
} from '../tasks/new-task/new-task.component';

export const routes: Routes = [
  {
    path: '',
    redirectTo: 'tasks',
    pathMatch: 'full',
  },
  {
    path: 'tasks', // <your-domain>/users/<uid>/tasks
    component: TasksComponent,
    // ðŸ”» aÅŸaÄŸÄ±daki resolveUserName aktarmasÄ±ndan dolayÄ± burada lazy-loading Ã§ok da anlamlÄ± deÄŸildir.
    // ðŸ”» burada lazy-loading yÃ¼klemeye Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ±z ÅŸeyin baÅŸka yerlerde hevesle Ã§aÄŸrÄ±lmadÄ±ÄŸÄ±ndan emin olmanÄ±z gerekir.
    // loadComponent: () => import('./tasks/tasks.component').then(c => c.TasksComponent),

    // runGuardsAndResolvers: 'paramsOrQueryParamsChange',
    runGuardsAndResolvers: 'always',
    resolve: {
      // ðŸ”» Bir sorgu (query) parametresi Ã§alÄ±ÅŸtÄ±ÄŸÄ±nda tekrar-tekrar Ã§alÄ±ÅŸmaz.
      userTasks: resolveUserTasks,
    },
    // title: 'Task Bileseni'
  },
  {
    path: 'tasks/new',
    component: NewTaskComponent,
    canDeactivate: [canLeaveEditPage],
  },
];
